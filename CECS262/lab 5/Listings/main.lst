C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2021 21:42:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(C:\Keil_v5\C51\INC\SiLABS\shared\
                    -si8051Base) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //main.c
   2          
   3          #include <SI_EFM8BB1_Register_Enums.h>
   4          
   5          void InitDevice(void)
   6          {
   7   1      //Disable Watchdog Timer
   8   1      //Disable Watchdog with key sequence
   9   1      WDTCN = 0xDE; //First key
  10   1      WDTCN = 0xAD; //Second key
  11   1      // [WDTCN – Watchdog Timer Control]$
  12   1      
  13   1      //Setup Defaults for P1
  14   1      P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
  15   1      | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__PUSH_PULL
  16   1      | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
  17   1      | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__PUSH_PULL;
  18   1      
  19   1      //Enable Weak Pullups
  20   1      XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  21   1      
  22   1      //Disable Interrupts
  23   1      IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
  24   1      | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
  25   1      | IE_ET2__ENABLED | IE_ES0__DISABLED;
  26   1      
  27   1      }
  28          
  29          // declare variables
  30          unsigned char x,y,angle; 
  31          unsigned int ValueTHTL;
  32          
  33          void LCDCommandWrite(unsigned char Data){
  34   1        P1 = P1&~(0x01<<2);         // RS = 0
  35   1        P1 = P1&~(0x01<<1);         // RW = 0
  36   1        P0 = Data;                  // D0~D7 = Data
  37   1        P1 = P1|(0x01<<0);          // E = 1
  38   1        
  39   1        // delay  
  40   1        for(x=0;x<0x02;x++){
  41   2          for(y=0;y<0xFF;y++){
  42   3            };
  43   2          };
  44   1          
  45   1        P1 = P1&~(0x01<<0);         // E = 0
  46   1      }
  47          
  48          void LCDDataWrite(unsigned char Data){
  49   1        P1 = P1|(0x01<<2);          // RS = 1
  50   1        P1 = P1&~(0x01<<1);         // RW = 0
  51   1        P0 = Data;                  // D0~D7 = Data
  52   1        P1 = P1|(0x01<<0);          // E = 1
  53   1          
  54   1        // delay
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2021 21:42:45 PAGE 2   

  55   1        for(x=0;x<0x02;x++){
  56   2          for(y=0;y<0xFF;y++){
  57   3            };
  58   2          };
  59   1          
  60   1        P1 = P1&~(0x01<<0);         // E = 0
  61   1      }
  62          
  63          void T0_ISR(void) interrupt 1{
  64   1        
  65   1        P1 = P1|(0x01<<5);          // Servo set to P1.5
  66   1        
  67   1        TCON = TCON&~(0x01<<4);     // TR0 = 0
  68   1        TL0 = 0x10;
  69   1        TH0 = 0xEC;
  70   1        TCON = TCON|(0x01<<4);      // TR0 = 1
  71   1        TCON = TCON&~(0x01<<6);     // TR0 = 0
  72   1        TL1 = (unsigned char)((ValueTHTL)& 0x00FF);
  73   1        TH1 = (unsigned char)((ValueTHTL>>8)& 0x00FF);
  74   1        TCON = TCON|(0x01<<6);      // TR = 0
  75   1      
  76   1        while(!(TCON&(0x01<<7))); 
  77   1        
  78   1        TCON = TCON&~(0x01<<6); 
  79   1        TCON = TCON&~(0x01<<7); 
  80   1        
  81   1        P1 = P1&~(0x01<<5);
  82   1        
  83   1      }
  84          
  85          void main(void)
  86          {
  87   1        InitDevice();
  88   1      
  89   1        TMOD = 0x11;                // Timer 16 bit mode
  90   1        TCON = TCON&~(0x01<<4);     // TR0 = 0
  91   1        TL0 = 0x10; 
  92   1        TH0 = 0xEC; 
  93   1        TCON = TCON|(0x01<<4);      // TR0 = 1
  94   1        
  95   1        // initialize LCD
  96   1        LCDCommandWrite(0x38); 
  97   1        LCDCommandWrite(0x06); 
  98   1        LCDCommandWrite(0x0C); 
  99   1        LCDCommandWrite(0x01); 
 100   1      
 101   1        // write initial angle
 102   1        LCDDataWrite('-'); 
 103   1        LCDDataWrite('4'); 
 104   1        LCDDataWrite('5'); 
 105   1        
 106   1        IE = 0x82;                // enable interrupt 
 107   1        
 108   1        while(1){
 109   2            
 110   2          ValueTHTL = 65281 - (12*angle);
 111   2          
 112   2          // increment button set to P1.3
 113   2          if(!(P1&(0x01<<3))){
 114   3            angle = angle+1;
 115   3            while(!(P1&(0x01<<3)));
 116   3          }
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2021 21:42:45 PAGE 3   

 117   2          
 118   2          // decrement button set to P1.4
 119   2          if(!(P1&(0x01<<4))){
 120   3            angle = angle-1;
 121   3            while(!(P1&(0x01<<4)));
 122   3          }
 123   2          
 124   2          if((angle<0)|(angle>20)){
 125   3            angle=0;
 126   3          }
 127   2          
 128   2          // cases for each angle in 20 increments 
 129   2          if(angle == 20){
 130   3            LCDCommandWrite(0x01); 
 131   3            LCDDataWrite('4');
 132   3            LCDDataWrite('5');
 133   3          }
 134   2          if(angle == 19){
 135   3            LCDCommandWrite(0x01); 
 136   3            LCDDataWrite('4');
 137   3            LCDDataWrite('0');
 138   3            LCDDataWrite('.');
 139   3            LCDDataWrite('5');
 140   3          }
 141   2          if(angle == 18){
 142   3            LCDCommandWrite(0x01); 
 143   3            LCDDataWrite('3');
 144   3            LCDDataWrite('6');
 145   3          }
 146   2          if(angle == 17){
 147   3            LCDCommandWrite(0x01); 
 148   3            LCDDataWrite('3');
 149   3            LCDDataWrite('1');
 150   3            LCDDataWrite('.');
 151   3            LCDDataWrite('5');
 152   3          }
 153   2          if(angle == 16){
 154   3            LCDCommandWrite(0x01); 
 155   3            LCDDataWrite('2');
 156   3            LCDDataWrite('7');
 157   3          }
 158   2          if(angle == 15){
 159   3            LCDCommandWrite(0x01); 
 160   3            LCDDataWrite('2');
 161   3            LCDDataWrite('2');
 162   3            LCDDataWrite('.');
 163   3            LCDDataWrite('5');
 164   3          }
 165   2          if(angle == 14){
 166   3            LCDCommandWrite(0x01); 
 167   3            LCDDataWrite('1');
 168   3            LCDDataWrite('8');
 169   3          }
 170   2          if(angle == 13){
 171   3            LCDCommandWrite(0x01); 
 172   3            LCDDataWrite('1');
 173   3            LCDDataWrite('3');
 174   3            LCDDataWrite('.');
 175   3            LCDDataWrite('5');
 176   3          }
 177   2          if(angle == 12){
 178   3            LCDCommandWrite(0x01); 
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2021 21:42:45 PAGE 4   

 179   3            LCDDataWrite('9');
 180   3          }
 181   2          if(angle == 11){
 182   3            LCDCommandWrite(0x01); 
 183   3            LCDDataWrite('4');
 184   3            LCDDataWrite('.');
 185   3            LCDDataWrite('5');
 186   3          }
 187   2          if(angle == 10){
 188   3            LCDCommandWrite(0x01); 
 189   3            LCDDataWrite('0');
 190   3          }
 191   2          if(angle == 9){
 192   3            LCDCommandWrite(0x01); 
 193   3            LCDDataWrite('-');
 194   3            LCDDataWrite('4');
 195   3            LCDDataWrite('.');
 196   3            LCDDataWrite('5');
 197   3          }
 198   2          if(angle == 8){
 199   3            LCDCommandWrite(0x01); 
 200   3            LCDDataWrite('-');
 201   3            LCDDataWrite('9');
 202   3          }
 203   2          if(angle == 7){
 204   3            LCDCommandWrite(0x01); 
 205   3            LCDDataWrite('-');
 206   3            LCDDataWrite('1');
 207   3            LCDDataWrite('3');
 208   3            LCDDataWrite('.');
 209   3            LCDDataWrite('5');
 210   3          }
 211   2          if(angle == 6){
 212   3            LCDCommandWrite(0x01); 
 213   3            LCDDataWrite('-');
 214   3            LCDDataWrite('1');
 215   3            LCDDataWrite('8');
 216   3          }
 217   2          if(angle == 5){
 218   3            LCDCommandWrite(0x01); 
 219   3            LCDDataWrite('-');
 220   3            LCDDataWrite('2');
 221   3            LCDDataWrite('2');
 222   3            LCDDataWrite('.');
 223   3            LCDDataWrite('5');
 224   3          }
 225   2          if(angle == 4){
 226   3            LCDCommandWrite(0x01); 
 227   3            LCDDataWrite('-');
 228   3            LCDDataWrite('2');
 229   3            LCDDataWrite('7');
 230   3          }
 231   2          if(angle == 3){
 232   3            LCDCommandWrite(0x01); 
 233   3            LCDDataWrite('-');
 234   3            LCDDataWrite('3');
 235   3            LCDDataWrite('1');
 236   3            LCDDataWrite('.');
 237   3            LCDDataWrite('5');
 238   3          }
 239   2          if(angle == 2){
 240   3            LCDCommandWrite(0x01); 
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2021 21:42:45 PAGE 5   

 241   3            LCDDataWrite('-');
 242   3            LCDDataWrite('3');
 243   3            LCDDataWrite('6');
 244   3          }
 245   2          if(angle == 1){
 246   3            LCDCommandWrite(0x01); 
 247   3            LCDDataWrite('-');
 248   3            LCDDataWrite('4');
 249   3            LCDDataWrite('0');
 250   3            LCDDataWrite('.');
 251   3            LCDDataWrite('5');
 252   3          }
 253   2          if(angle == 0){
 254   3            LCDCommandWrite(0x01); 
 255   3            LCDDataWrite('-');
 256   3            LCDDataWrite('4');
 257   3            LCDDataWrite('5');
 258   3          }
 259   2        }
 260   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    773    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
